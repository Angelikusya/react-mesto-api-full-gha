[{"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/index.js":"1","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/reportWebVitals.js":"2","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/App.js":"3","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Footer.js":"4","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Main.js":"5","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Header.js":"6","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/EditProfilePopup.js":"7","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/ImagePopup.js":"8","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js":"9","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Register.js":"10","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/ProtectedRoute.js":"11","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Login.js":"12","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/AddCardPopup.js":"13","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/EditAvatarPopup.js":"14","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/contexts/CurrentUserContext.js":"15","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js":"16","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js":"17","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Card.js":"18","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/PopupWithForm.js":"19"},{"size":429,"mtime":1700151308997,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1698071266558,"results":"22","hashOfConfig":"21"},{"size":7149,"mtime":1705071092336,"results":"23","hashOfConfig":"21"},{"size":188,"mtime":1695028250495,"results":"24","hashOfConfig":"21"},{"size":2131,"mtime":1705054755113,"results":"25","hashOfConfig":"21"},{"size":826,"mtime":1700238572594,"results":"26","hashOfConfig":"21"},{"size":2492,"mtime":1700251676730,"results":"27","hashOfConfig":"21"},{"size":585,"mtime":1700251593400,"results":"28","hashOfConfig":"21"},{"size":628,"mtime":1700251428358,"results":"29","hashOfConfig":"21"},{"size":1833,"mtime":1700251302397,"results":"30","hashOfConfig":"21"},{"size":263,"mtime":1700152009601,"results":"31","hashOfConfig":"21"},{"size":1648,"mtime":1700251282859,"results":"32","hashOfConfig":"21"},{"size":1786,"mtime":1699044563449,"results":"33","hashOfConfig":"21"},{"size":1280,"mtime":1700251749066,"results":"34","hashOfConfig":"21"},{"size":83,"mtime":1699026842769,"results":"35","hashOfConfig":"21"},{"size":1118,"mtime":1705072673208,"results":"36","hashOfConfig":"21"},{"size":3308,"mtime":1705005392804,"results":"37","hashOfConfig":"21"},{"size":1832,"mtime":1705054758588,"results":"38","hashOfConfig":"21"},{"size":887,"mtime":1699044650119,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xrk6ks",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/index.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/reportWebVitals.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/App.js",["98"],[],"import React, { useState, useEffect} from 'react';\nimport {useNavigate, Route, Routes, Navigate } from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport {api} from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddCardPopup.js';\nimport * as auth from '../utils/auth.js'\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport ImgSuccess from '../images/success.svg';\nimport ImgFail from '../images/Fail.svg';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n  const navigate = useNavigate();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isSuccessfulRegistration, setIsSuccessfulRegistration] = useState(false);\n  const [email, setEmail] = useState('');\n  \n  useEffect(() => {\n    if (loggedIn) {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, cardsData]) => {\n        setCurrentUser(userData);\n        setCards(cardsData)\n      })\n      .catch((err) => console.log(err));\n    }\n  }, [loggedIn]);\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(id => id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n      .catch((err) => console.error(`Ошибка: ${err}`))\n};\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data.name, data.about)\n      .then(res => {\n        setCurrentUser(res);\n        setEditProfilePopupOpen(false);\n      })\n      .catch((err) => console.error(`Ошибка: ${err}`))\n  };\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch((err) => console.error(`Ошибка: ${err}`))\n  };\n\n  function handleAddPlace(data) {\n    api.addCard(data.name, data.link)\n        .then((newCard) => {\n          setCards([newCard, ...cards]);\n          setIsAddPlacePopupOpen(false);\n      })\n      .catch((err) => console.error(`Ошибка: ${err}`))\n  };\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n    .then((res) => {\n      setCards((state) => state.filter((c) => card._id !== c._id ));\n    })\n    .catch((err) => console.error(`Ошибка: ${err}`))\n  }\n\n  function handleRegister({email, password}) {\n    auth \n    .register(email, password)\n    .then(() => {\n      setIsSuccessfulRegistration(true);\n      navigate('/signin');\n    })\n    .catch((err) => {\n      console.error(`Ошибка: ${err}`);       \n      setIsSuccessfulRegistration(false);\n    })\n    .finally(() => {\n      setIsInfoTooltipOpen(true);\n    });\n  }  \n\n  function handleLogin({email, password}) {\n    auth \n    .login(email, password)\n    .then((res) => {\n      if(res.token) {\n        setLoggedIn(true);\n        setEmail(email);\n        navigate('/');\n        return res;\n      }\n    })\n    .catch((err) => console.error(`Ошибка: ${err}`)\n    )\n  }\n\n  function handleExit() {\n    setLoggedIn(false);\n    setEmail('');\n    localStorage.removeItem('token');\n  }\n\n  \n  useEffect(() => {\n    const jwt = localStorage.getItem('token');\n    if (jwt) { handleTokenCheck(jwt) }\n  }, [])\n  \n  const handleTokenCheck = (jwt) => {\n    auth\n      .checkToken(jwt)\n      .then((res) => {\n        if (res) {\n          setLoggedIn(true);\n          setEmail(res.email);\n          navigate('/', {replace: true})\n        }\n      })\n      .catch((err) => console.error(`Ошибка: ${err}`))\n  }\n\n  \n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n  \n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header email={email} onExit={handleExit}/>\n        <Routes>\n          <Route path=\"/signin\" element={<Login onLogin={handleLogin} />} />\n          <Route path=\"/signup\" element={<Register onRegister={handleRegister}/>} />\n          <Route \n            path=\"/\" \n            element={ \n              <ProtectedRoute \n                element={Main}\n                onEditProfile={handleEditProfileClick}         \n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n                loggedIn={loggedIn}  \n                />\n              }\n            />\n          <Route path=\"*\" element={loggedIn ? <Navigate to=\"/\" /> : <Navigate to=\"/signin\" />} />\n        </Routes>\n\n          {loggedIn && <Footer />}\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} \n                            onClose={closeAllPopups} \n                            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} \n                          onClose={closeAllPopups}  \n                          onUpdateAvatar={handleUpdateAvatar}\n          /> \n          <AddPlacePopup isOpen={isAddPlacePopupOpen} \n                        onClose={closeAllPopups} \n                        onAddPlace={handleAddPlace}\n          />\n          {selectedCard && (\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n          )}\n          <InfoTooltip isOpen={isInfoTooltipOpen} \n                      onClose={closeAllPopups} \n                      alert={isSuccessfulRegistration ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}\n                      image={isSuccessfulRegistration ? ImgSuccess : ImgFail}/>\n        </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Footer.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Main.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Header.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/EditProfilePopup.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/ImagePopup.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Register.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/ProtectedRoute.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Login.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/AddCardPopup.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/EditAvatarPopup.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/contexts/CurrentUserContext.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/Card.js",[],[],"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/components/PopupWithForm.js",[],[],{"ruleId":"99","severity":1,"message":"100","line":149,"column":6,"nodeType":"101","endLine":149,"endColumn":8,"suggestions":"102"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["103"],{"desc":"104","fix":"105"},"Update the dependencies array to be: [handleTokenCheck]",{"range":"106","text":"107"},[4367,4369],"[handleTokenCheck]"]