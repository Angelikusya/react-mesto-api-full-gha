{"ast":null,"code":"export var BASE_URL='http://localhost:3001';var checkResponse=function checkResponse(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{Accept:\"application/json\",'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return checkResponse(res);});};export var login=function login(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return checkResponse(res);}).then(function(data){if(data.token){localStorage.setItem('token',data.token);return data;}});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){return checkResponse(res);});};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","concat","status","register","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","login","data","token","localStorage","setItem","checkToken"],"sources":["/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'http://localhost:3001';\n\nconst checkResponse = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((res) => checkResponse(res))\n};\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((res) => checkResponse(res))\n  .then(data => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n  });\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization' : `Bearer ${token}`\n    }\n  })\n  .then((res) => checkResponse(res))\n};"],"mappings":"AAAA,MAAO,IAAM,CAAAA,QAAQ,CAAG,uBAAuB,CAE/C,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,GAAG,CAAK,CAC7B,MAAO,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,CAAE,CAAC,CACtE,CAAC,CAED,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAC3C,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDQ,IAAI,CAAC,SAACjB,GAAG,QAAK,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC,CAED,MAAO,IAAM,CAAAkB,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAIV,KAAK,CAAEC,QAAQ,CAAK,CACxC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDQ,IAAI,CAAC,SAACjB,GAAG,QAAK,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACjCiB,IAAI,CAAC,SAAAE,IAAI,CAAI,CACZ,GAAIA,IAAI,CAACC,KAAK,CAAE,CACdC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACC,KAAK,CAAC,CACzC,MAAO,CAAAD,IAAI,CACb,CACF,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,IAAM,CAAAI,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIH,KAAK,CAAK,CACnC,MAAO,CAAAV,KAAK,IAAAL,MAAA,CAAIP,QAAQ,cAAa,CACnCa,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAP,MAAA,CAAae,KAAK,CACnC,CACF,CAAC,CAAC,CACDH,IAAI,CAAC,SAACjB,GAAG,QAAK,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}