{"ast":null,"code":"import _classCallCheck from\"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this.baseUrl=options.baseUrl;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value://подтягиваем карточки\nfunction getInitialCards(){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}}).then(this._checkResponse);}//подтягиваем имя и работу\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'GET',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}}).then(this._checkResponse);}//отправляем имя и работу на сервер\n},{key:\"setUserInfo\",value:function setUserInfo(name,about){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'PATCH',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'},body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}// отправляем ссылку на новый аватар на сервер\n},{key:\"setUserAvatar\",value:function setUserAvatar(avatar){return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'},body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}//отправляем новую карточку на сервер\n},{key:\"addCard\",value:function addCard(name,link){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'},body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}// удаляем карточку с сервера\n},{key:\"removeCard\",value:function removeCard(cardId){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}}).then(this._checkResponse);}// добавляем и убираем лайк карточке на сервере\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(card,isLiked){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(card,\"/likes\"),{method:!isLiked?\"DELETE\":\"PUT\",headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token')),Accept:'application/json','Content-Type':'application/json'}}).then(this._checkResponse);}}]);return Api;}();// вызов Api\nexport{Api as default};var api=new Api({baseUrl:\"http://localhost:3001\"});export{api};","map":{"version":3,"names":["Api","options","_classCallCheck","baseUrl","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getInitialCards","fetch","headers","localStorage","getItem","then","getUserInfo","method","setUserInfo","name","about","body","JSON","stringify","setUserAvatar","avatar","addCard","link","removeCard","cardId","changeLikeCardStatus","card","isLiked","Accept","default","api"],"sources":["/Users/anzhelika/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["export default class Api {\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`)\n    };\n\n    //подтягиваем карточки\n    getInitialCards() {\n        return fetch (`${this.baseUrl}/cards`, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,   \n            }   \n        })\n        .then(this._checkResponse)\n    } \n\n    //подтягиваем имя и работу\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            }\n        })\n        .then(this._checkResponse)\n    }\n\n    //отправляем имя и работу на сервер\n    setUserInfo(name, about) {\n        return fetch (`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name, \n                about,\n            })\n        })\n        .then(this._checkResponse)\n    }\n\n    // отправляем ссылку на новый аватар на сервер\n    setUserAvatar(avatar) {\n        return fetch (`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: avatar\n            })\n        })\n        .then(this._checkResponse)\n    }\n\n    //отправляем новую карточку на сервер\n    addCard(name, link) {\n        return fetch (`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        })\n        .then(this._checkResponse) \n    }\n    \n    // удаляем карточку с сервера\n    removeCard(cardId) {\n        return fetch(`${this.baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            }\n        })\n        .then(this._checkResponse);\n    }\n\n    // добавляем и убираем лайк карточке на сервере\n    changeLikeCardStatus(card, isLiked) {\n        return fetch(`${this.baseUrl}/cards/${card}/likes`, {\n            method: !isLiked ? \"DELETE\" : \"PUT\",\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(this._checkResponse)\n    }\n}\n\n// вызов Api\nconst api = new Api ({\n    baseUrl: \"http://localhost:3001\",\n});\n\nexport {api};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}